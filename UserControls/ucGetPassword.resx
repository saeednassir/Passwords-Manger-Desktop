<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFind.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAYBJREFUSEvllD0vQ3EchWvUJmImYhMGEQlCF6MwMjOIiM1gMNjEQNKJpQa+gFho
        NLHjA1hExOQlYRAbEq7n1Bl6U/fFSwfxJE+a/7nn/m5v+783878IgqAPV3AXy7iNU9jkyvdgQCseoHjG
        UzzGGwVwjzOufw1O7EQNesB5DH1b1v14iKLgOB2ckMNzvMYOxzVwrAELKKYdJ0N5Cd8w7ygSOrqI7uQO
        0/0nFC+x5GUidAdQTDqKhlL7RzeYdZQIXd3FLW45iobSIIoRR6mgf4JlL6Oh1KPpMO4oFfS1hXe8jIaS
        dpD2/KqjROg24wsuO4qHYgm1RbOOYqG3gKLXUTwU8/iKRUeR0OnCR9xzlAxl7YojFEXM+VAI8mHU7rnC
        FsfxUNTwDRS6iO5Er4w1nMBRnEO99PQwnmHk0x6CYvVwfWo9hPv4hNVc4CI2+vR4KNYM96EKrLPYjbpg
        m+N0aBiuo9jE0PAfoWFYn+GCgWOV0Z/8LL8Gg7Uz6jP8j5LJvAN0F/QY2FT34gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddOrChange.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DwAACw8BkvkDpQAAARtJREFUSEvdlFtuwjAQRSMq2F4RBbqlQruLonZJQF97qOA/nBtf5IbGiUP+ONKV
        opnjsWSDi9umLMsJeSRvZEeOjr5VW5KJ9X6w8IF8ky6+yMzLukG+Iy9a2ZNnMvKYNEjXDD+z8phmEHQs
        Q5l6XB0aulCd51B+yP+Lp6hfSytW5XaxsBqh+B56aazmbLCxGqH4EXpprOZssLMaoXgIvTpuJ7F2ycHt
        iIqhV8ftJNYu+XU7QnEfemmspob+ZWs1QlFvSytWczZ4tRqhqIerFas5G8ytRiiOyWfVHoYeyOYXlsas
        UoZx73HNIOhVvJYnj0mDNCLrSu/HinQ/12eQpyTnTuS0H0sKFuriF2RDtkR/RkXfqs3J2PpNUhQn+x/L
        rgh4Ri8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>